/* -LICENSE-START-
** Copyright (c) 2010 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
** 
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
** 
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/


#ifndef __DeckLink_API_v7_9_h__
#define __DeckLink_API_v7_9_h__

#include "DeckLinkAPI.h"


#define IID_IDeckLinkDeckControl_v7_9                     (REFIID){0xA4,0xD8,0x10,0x43,0x06,0x19,0x42,0xB7,0x8E,0xD6,0x60,0x2D,0x29,0x04,0x1D,0xF7}


#if defined(__cplusplus)


class IDeckLinkDeckControl_v7_9;



class IDeckLinkDeckControl_v7_9 : public IUnknown
{
public:
    virtual HRESULT Open ( BMDTimeScale timeScale,  BMDTimeValue timeValue,  bool timecodeIsDropFrame,  BMDDeckControlError *error) = 0;
    virtual HRESULT Close ( bool standbyOn) = 0;
    virtual HRESULT GetCurrentState ( BMDDeckControlMode *mode,  BMDDeckControlVTRControlState *vtrControlState,  BMDDeckControlStatusFlags *flags) = 0;
    virtual HRESULT SetStandby ( bool standbyOn) = 0;
    virtual HRESULT Play ( BMDDeckControlError *error) = 0;
    virtual HRESULT Stop ( BMDDeckControlError *error) = 0;
    virtual HRESULT TogglePlayStop ( BMDDeckControlError *error) = 0;
    virtual HRESULT Eject ( BMDDeckControlError *error) = 0;
    virtual HRESULT GoToTimecode ( BMDTimecodeBCD timecode,  BMDDeckControlError *error) = 0;
    virtual HRESULT FastForward ( bool viewTape,  BMDDeckControlError *error) = 0;
    virtual HRESULT Rewind ( bool viewTape,  BMDDeckControlError *error) = 0;
    virtual HRESULT StepForward ( BMDDeckControlError *error) = 0;
    virtual HRESULT StepBack ( BMDDeckControlError *error) = 0;
    virtual HRESULT Jog ( double rate,  BMDDeckControlError *error) = 0;
    virtual HRESULT Shuttle ( double rate,  BMDDeckControlError *error) = 0;
    virtual HRESULT GetTimecodeString ( BMDstring *currentTimeCode,  BMDDeckControlError *error) = 0;
    virtual HRESULT GetTimecode ( IDeckLinkTimecode **currentTimecode,  BMDDeckControlError *error) = 0;
    virtual HRESULT GetTimecodeBCD ( BMDTimecodeBCD *currentTimecode,  BMDDeckControlError *error) = 0;
    virtual HRESULT SetPreroll ( uint32_t prerollSeconds) = 0;
    virtual HRESULT GetPreroll ( uint32_t *prerollSeconds) = 0;
    virtual HRESULT SetExportOffset ( int32_t exportOffsetFields) = 0;
    virtual HRESULT GetExportOffset ( int32_t *exportOffsetFields) = 0;
    virtual HRESULT GetManualExportOffset ( int32_t *deckManualExportOffsetFields) = 0;
    virtual HRESULT SetCaptureOffset ( int32_t captureOffsetFields) = 0;
    virtual HRESULT GetCaptureOffset ( int32_t *captureOffsetFields) = 0;
    virtual HRESULT StartExport ( BMDTimecodeBCD inTimecode,  BMDTimecodeBCD outTimecode,  BMDDeckControlExportModeOpsFlags exportModeOps,  BMDDeckControlError *error) = 0;
    virtual HRESULT StartCapture ( bool useVITC,  BMDTimecodeBCD inTimecode,  BMDTimecodeBCD outTimecode,  BMDDeckControlError *error) = 0;
    virtual HRESULT GetDeviceID ( uint16_t *deviceId,  BMDDeckControlError *error) = 0;
    virtual HRESULT Abort (void) = 0;
    virtual HRESULT CrashRecordStart ( BMDDeckControlError *error) = 0;
    virtual HRESULT CrashRecordStop ( BMDDeckControlError *error) = 0;
    virtual HRESULT SetCallback ( IDeckLinkDeckControlStatusCallback *callback) = 0;

protected:
    virtual ~IDeckLinkDeckControl_v7_9 () {}; 
};


#endif      
#endif      
